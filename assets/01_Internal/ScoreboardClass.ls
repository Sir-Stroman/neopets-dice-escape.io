property pimage, pbg, pbgref, scoreText, livestext, roundscoretext, levelText, timerText, pdestrect, pMember, pfontcolor, pfontsize, pfontspacing, pSprite, ptextinkglobal gGameon new me, sprite_num, bg_image, draw_retry  pimage = image(480, 360, 16)  pbg = bg_image  pMember = new(#bitmap, castLib("created"))  srcRect = rect(0, 0, pbg.width, 100)  destRect = rect(0, 0, 480, 100)  pimage.copyPixels(pbg, destRect, srcRect)  pbgref = pimage.duplicate()  pMember.image = pimage  ptextink = rgb(120, 120, 120)  pfontcolor = rgb(255, 255, 255)  pfontsize = 22  pfontspacing = 26  scoreText = member("score_txt", "art")  scoreText.fontSize = pfontsize  scoreText.fixedLineSpace = pfontspacing  scoreText.text = "Score: " & gGame.getScore()  livestext = member("lives_txt", "art")  livestext.fontSize = pfontsize  livestext.fixedLineSpace = pfontspacing  livestext.text = "Lives: " & gGame.getlives()  roundscoretext = member("roundscore_txt", "art")  roundscoretext.fontSize = pfontsize  roundscoretext.fixedLineSpace = pfontspacing  roundscoretext.text = "Round Pts: " & gGame.getRoundScore()  levelText = member("level_txt", "art")  levelText.fontSize = pfontsize  levelText.fixedLineSpace = pfontspacing  levelText.text = "LEVEL: " & gGame.getLevel()  timerText = member("timer_txt")  timerText.fontSize = pfontsize  timerText.fixedLineSpace = pfontspacing  timerText.text = "Time: " & gGame.getTimeLimit()  puppetSprite(sprite_num, 1)  pSprite = sprite(sprite_num)  pSprite.member = pMember  pSprite.loc = point(pMember.width / 2, pMember.height / 2)  button_text = member("button_txt")  button_text.fontSize = 20  button_text.text = "End Game"  button_img = member("sbg", "art").image.duplicate()  endgamebutton_img = getbuttonwithtext(button_text, pfontcolor, button_img, ptextink)  xStart = 470 - button_img.width  destRect = rect(xStart, 6, xStart + endgamebutton_img.width, endgamebutton_img.height + 6)  pimage.copyPixels(endgamebutton_img, destRect, endgamebutton_img.rect, [#bgColor: ptextink, #ink: 36])  me.resetTexture()  if draw_retry then    button_text.text = "Retry Level"    endgamebutton_img = getbuttonwithtext(button_text, pfontcolor, button_img, ptextink)    xStart = 470 - endgamebutton_img.width    destRect = rect(xStart, 47, xStart + endgamebutton_img.width, endgamebutton_img.height + 47)    pimage.copyPixels(endgamebutton_img, destRect, endgamebutton_img.rect, [#bgColor: ptextink, #ink: 36])  end if  me.resetTexture()  me.buildScoreBoard()  return meendon Remove me  put "sprite" && pSprite  pSprite.member = VOIDendon resetTexture me  pMember.image = pimageendon buildScoreBoard me  me.updateScore()  me.updatelives()  me.updateroundscore()  me.updateLevel()  me.updateTime()endon updateScore me  scoreText.text = "Score: " && gGame.getScore()  s = getdropshadowtext(scoreText, 2, pfontcolor, rgb(0, 0, 0), ptextink)  sbacker = pbgref.duplicate()  destRect = rect(6, 6, s.width + 6, s.height + 6)  sbacker.copyPixels(pbgref, destRect, destRect)  sbacker.copyPixels(s, destRect, s.rect, [#bgColor: ptextink, #ink: 36])  pimage.copyPixels(sbacker, destRect, destRect)  me.resetTexture()endon updatelives me  livestext.text = "Lives" && gGame.getlives()  s = getdropshadowtext(livestext, 2, pfontcolor, rgb(0, 0, 0), ptextink)  sbacker = pbgref.duplicate()  destRect = rect(6, 36, s.width + 6, s.height + 36)  sbacker.copyPixels(pbgref, destRect, destRect)  sbacker.copyPixels(s, destRect, s.rect, [#ink: 36, #bgColor: ptextink])  pimage.copyPixels(sbacker, destRect, destRect)  me.resetTexture()endon updateroundscore me  roundscoretext.text = "Round Pts" && gGame.getRoundScore()  s = getdropshadowtext(roundscoretext, 2, pfontcolor, rgb(0, 0, 0), ptextink)  sbacker = pbgref.duplicate()  xStart = 240 - (s.width / 2)  destRect = rect(xStart, 36, xStart + s.width, s.height + 36)  sbacker.copyPixels(pbgref, destRect, destRect)  sbacker.copyPixels(s, destRect, s.rect, [#ink: 36, #bgColor: ptextink])  pimage.copyPixels(sbacker, destRect, destRect)  me.resetTexture()endon updateLevel me  levelText.text = "Level" && gGame.getLevel()  s = getdropshadowtext(levelText, 2, pfontcolor, rgb(0, 0, 0), ptextink)  sbacker = pbgref.duplicate()  xStart = 480 - s.width  destRect = rect(xStart, 6, xStart + s.width, s.height + 6)  destRect = rect(6, 62, s.width + 6, s.height + 62)  sbacker.copyPixels(pbgref, destRect, destRect)  sbacker.copyPixels(s, destRect, s.rect, [#ink: 36, #bgColor: ptextink])  pimage.copyPixels(sbacker, destRect, destRect)  me.resetTexture()endon updateTime me  timeleft = gGame.getNumSecondsLeft()  timerText.text = "Time: " & timeleft  s = getdropshadowtext(timerText, 2, pfontcolor, rgb(0, 0, 0), ptextink)  sbacker = pbgref.duplicate()  xStart = 240 - (s.width / 2)  destRect = rect(xStart, 6, xStart + s.width, s.height + 6)  sbacker.copyPixels(pbgref, destRect, destRect)  sbacker.copyPixels(s, destRect, s.rect, [#ink: 36, #bgColor: ptextink])  pimage.copyPixels(sbacker, destRect, destRect)  me.resetTexture()end