property deleteMe, pSprite, pendrotation, pRotating, pframe, pmenutexture, pframetexture, pinstructionstexture, pSpriteChannelNumon new me, menu_texture, frame_texture, instr_texture  pmenutexture = menu_texture  pframetexture = frame_texture  pinstructionstexture = instr_texture  me.setupmenu()  return meendon setupmenu me  deleteMe = 0  pRotating = 0  pframe = "menuframe"  pendrotation = vector(0, 0, 0)  pWorld = member("blank3D", "3d Cast")  pWorld.resetWorld()  main_camera = pWorld.camera[1]  main_camera.transform.position = vector(109.39730000000000132, 0.0614, 0.1555)  main_camera.transform.rotation = vector(0.0, 90.0, 0.0)  main_camera.hither = 1.0  main_camera.yon = 12000.0  boxResource = pWorld.newModelResource("generic_cube", #box)  pSprite = pWorld.newModel("menuCube", boxResource)  pSprite.transform.rotation = vector(0, 0, 0)  sc = 1  pSprite.transform.scale = vector(1, 1, 1)  menushader = pWorld.newShader("menuShader", #standard)  menutexture = pWorld.newTexture("menu_texture", #fromImageObject, pmenutexture)  menushader.texture = menutexture  menuframeshader = pWorld.newShader("menuFrame", #standard)  menuframetexture = pWorld.newTexture("menuFrameTex", #fromImageObject, pframetexture)  menuframeshader.texture = menuframetexture  menuframeshader.shininess = 0  instructionsframeshader = pWorld.newShader("instrFrame", #standard)  instructionsframetexture = pWorld.newTexture("instrFrameTex", #fromImageObject, pinstructionstexture)  instructionsframeshader.texture = instructionsframetexture  instructionsframeshader.shininess = 0  pSprite.shaderList[2] = menuframeshader  pSprite.shaderList[1] = instructionsframeshader  menushader.shininess = 0  pSpriteChannelNum = 1  puppetSprite(pSpriteChannelNum, 1)  movieWidth = 480  movieHeight = 460  pWorld.directToStage = 1  sprite(pSpriteChannelNum).member = pWorld  sprite(pSpriteChannelNum).width = movieWidth  sprite(pSpriteChannelNum).height = movieHeight  sprite(pSpriteChannelNum).loc = point(movieWidth / 2, movieHeight / 2)endon onbuttonpressed me, whichbutton  sound(1).play(member("buttonSound", "sounds"))  case whichbutton of    "start":      me.stopStepFrame()      go("setupframe")    "instructions":      v = vector(0, -90, 0)    "back":      v = vector(0, 0, 0)  end case  me.rotateto(v)endon rotateto me, rotation_vector  pendrotation = rotation_vector  pRotating = 1endon setframelabel me  sprite_rotation_y = integer(pSprite.transform.rotation.y)  if sprite_rotation_y = -90 then    pframe = "instructionsFrame"  else    if sprite_rotation_y = 0 then      pframe = "menuFrame"    end if  end ifendon step me  if pRotating = 1 then    sprite_rotation_y = pSprite.transform.rotation.y    rotamt = (pendrotation.y - sprite_rotation_y) / 12    pSprite.rotate(0, rotamt, 0)    if rotamt.abs < 0.10000000000000001 then      pSprite.transform.rotation = pendrotation      me.setframelabel()      pRotating = 0    end if  end ifendon stopStepFrame me  deleteMe = 1end